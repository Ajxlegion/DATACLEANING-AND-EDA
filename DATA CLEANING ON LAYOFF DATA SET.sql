-- SQL Project - Data Cleaning

-- https://www.kaggle.com/datasets/swaptr/layoffs-2022 

USE LAYOFF;
SELECT *
FROM LAYOFFS;

-- first thing we want to do is create a staging table. This is the one we will work in and clean the data. We want a table with the raw data in case something happens

CREATE TABLE LAYOFF_STAGING
LIKE LAYOFFS;

INSERT LAYOFF_STAGING 
select *
FROM layoffS;

-- now when we are data cleaning we usually follow a few steps
-- 1. check for duplicates and remove any
-- 2. standardize data and fix errors
-- 3. Look at null values and see what 
-- 4. remove any columns and rows that are not necessary


WITH DUPLICATE_cte as
(
SELECT *,
row_number() OVER (PARTITION BY COMPANY, LOCATION, INDUSTRY, TOTAL_LAID_OFF, PERCENTAGE_LAID_OFF, 'DATE',STAGE,COUNTRY, FUNDS_RAISED_MILLIONS) AS ROW_NUM
FROM LAYOFF_STAGING
)
SELECT *
FROM DUPLICATE_cte 
WHERE ROW_NUM>1;

SELECT * FROM LAYOFF_STAGING WHERE COMPANY ='Better.com';

CREATE TABLE LAYOFF_STAGING2
LIKE LAYOFF_STAGING; 

ALTER TABLE LAYOFF_STAGING2
ADD column ROW_NUM INT;

INSERT INTO LAYOFF_STAGING2
SELECT *,
row_number() OVER (PARTITION BY COMPANY, LOCATION, INDUSTRY, TOTAL_LAID_OFF, PERCENTAGE_LAID_OFF, 'DATE',STAGE,COUNTRY, FUNDS_RAISED_MILLIONS) AS ROW_NUM
FROM LAYOFF_STAGING;

DELETE FROM LAYOFF_STAGING2 WHERE ROW_NUM>1;

select * FROM LAYOFF_STAGING2;

SELECT TRIM(COMPANY) 
FROM LAYOFF_STAGING2;

UPDATE LAYOFF_STAGING2
SET COMPANY = TRIM(COMPANY);

SELECT distinct INDUSTRY 
FROM LAYOFF_STAGING2
ORDER BY 1;

UPDATE layoff_STAGING2
SET INDUSTRY ='CRYPTO'
WHERE INDUSTRY LIKE 'CRYPTO%';

UPDATE LAYOFF_STAGING2
SET COUNTRY = TRIM(TRAILING '.' FROM COUNTRY)
WHERE COUNTRY LIKE 'UNITED STATES%';

SELECT date,
STR_TO_DATE(date,'%m/%d/%y') AS FINAL_DATE
FROM LAYOFF_STAGING2;

UPDATE LAYOFF_STAGING2
SET `date` =STR_TO_DATE(`date`,'%m/%d/%Y');

alter table layoff_staging2 
modify column `date` date;

SELECT * 
FROM LAYOFF_STAGING2;
#WHERE COUNTRY='';

UPDATE LAYOFF_STAGING2
SET INDUSTRY = NULL 
WHERE INDUSTRY='';

SELECT T1.INDUSTRY,T2.INDUSTRY
FROM LAYOFF_STAGING2 T1
JOIN LAYOFF_STAGING2 T2
	ON T1.COMPANY=T2.COMPANY 
    AND T1.LOCATION=T2.LOCATION
WHERE T1.INDUSTRY IS NULL
AND T2.INDUSTRY IS NOT NULL;

UPDATE LAYOFF_STAGING2 T1
JOIN LAYOFF_STAGING2 T2
	ON T1.COMPANY=T2.COMPANY 
SET T1.INDUSTRY= T2.INDUSTRY 
WHERE  T1.INDUSTRY IS NULL
AND T2.INDUSTRY IS NOT NULL;

select * FROM LAYOFF_STAGING2;

DELETE
FROM LAYOFF_STAGING2
WHERE TOTAL_LAID_OFF IS NULL AND PERCENTAGE_LAID_OFF IS NULL;

ALTER TABLE LAYOFF_STAGING2 
DROP column ROW_NUM;

select * FROM LAYOFF_STAGING2;